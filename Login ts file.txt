import { Component, OnInit, HostListener } from '@angular/core';
import { NgForm, FormGroup, FormControl, Validators, AbstractControl, NgModel } from '@angular/forms';
import { Router } from '@angular/router';
import { ActivatedRoute } from '@angular/router';
import { HttpErrorResponse } from '@angular/common/http';
import { Title } from '@angular/platform-browser';
import { AppComponent } from '../app.component';
import { GlobalVariable } from '../globals';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  
  model: any = {};
  signupmodel: any = {};
  form: FormGroup;
  title: string;
  loader_cont;
  year: number = new Date().getFullYear();
  IsIndividual: boolean = true;
  loginerror: string;
  erroruser: string = '';
  UserID: number;
  rid: number;
  isActiveUser: boolean = false;
  type: string;
   credentialError: boolean = false;

  constructor(private activatedRoute: ActivatedRoute, private router: Router, private titleService: Title, private appcmp: AppComponent) { }

  ngOnInit(): void {
    
    this.appcmp.loadermessage = 'Please wait...';

    this.signupmodel.EmailId = '';
    this.signupmodel.PasswordText = '';
    localStorage.removeItem('LinkedIn');

    this.activatedRoute.params.subscribe(routeParams => {
      //console.log('routeParams 1', routeParams);
      //console.log('UserID', routeParams.id);
      //debugger;
      if (routeParams && (routeParams.Userid || routeParams.Requestid || routeParams.Type)) {
        //localStorage.setItem('RefRequestID', routeParams.id);
        //localStorage.setItem('RefRecordingID', routeParams.id);
        let uid: number;
        if (routeParams.Userid) uid = routeParams.Userid;
        if (routeParams.Requestid) this.rid = routeParams.Requestid;
        if (routeParams.Type) this.type = routeParams.Type;
        
        //if (uid) this.getUsersDetails(uid);
        //getting recording status
        //if (rid) this.getRecordingStatus(rid);

      } else {
        //this.router.navigateByUrl('/ReferenceApplication/Error');
      }
    });
  }
  onSubmit(form) {
    if (this.model.Email == 'admin@webtalkx.com' && this.model.Password == 'Webtalkx2021') {

     this.router.navigateByUrl('/I2BApplication/Dashboard');
   } else {
     this.credentialError = true;
   }
  }
  
  
  
  /*
  
  //Method to get the users details
  getUsersDetails(uid) {
    if (uid) {
      let Obj: any = {};
      Obj.UserID = uid;

      //showing loader icon
      this.appcmp.showLoader = true;
      this.appcmp.loadermessage = 'Please wait...';
      
      this.loginservice.GetUsersDetails(Obj).subscribe(res => {
        if (res["length"] > 0) {
          
          if (res[0]['ResponseStatus'] == 'Success') {
            //Method to switch the tab
            this.switchTheTab();

            this.UserID = res[0]['UserID'];
            //this.signupmodel.EmailId = '';
            this.signupmodel.FirstName = res[0]['FirstName'];
            this.signupmodel.LastName = res[0]['LastName'];
            this.signupmodel.EmailId = res[0]['EmailID'];

            //Check the email is active user or not
            if (res[0]['EmailID']) this.onEmailEnter(res[0]['EmailID']);

            //hiding loader icon
            this.appcmp.showLoader = false;
            
          } else {

            //hiding loader icon
            this.appcmp.showLoader = false;
          }
        } else {

          //hiding loader icon
          this.appcmp.showLoader = false;
        }
      });
    }
  }*/

}
